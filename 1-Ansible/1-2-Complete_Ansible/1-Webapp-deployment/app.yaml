---
- name: Deploy and Start Flask Application
  hosts: web01
  become: yes

  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install necessary packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - python3
        - python3-pip
        - python3-venv
        - build-essential
        - mysql-client
        - pkg-config  # Add pkg-config for building the package
        - libmysqlclient-dev  # Development files for MySQL client library

    - name: Create virtual environment
      ansible.builtin.command:
        cmd: python3 -m venv {{ venv_path }}
        creates: "{{ venv_path }}"

    - name: Install Python Flask dependencies in virtual environment
      ansible.builtin.pip:
        name: "{{ item }}"
        virtualenv: "{{ venv_path }}"
        state: present
      loop:
        - flask
        - flask-mysqldb

    - name: Copy Flask application code
      ansible.builtin.copy:
        src: app.py
        dest: "{{ app_path }}"
        mode: '0755'

    - name: Set up environment variables for Flask application
      ansible.builtin.lineinfile:
        path: /etc/environment
        line: "{{ item }}"
        state: present
      loop:
        - "DB_HOST={{ db_host }}"
        - "DB_PORT={{ db_port }}"
        - "DB_NAME={{ db_name }}"
        - "DB_USER={{ db_user }}"
        - "DB_PASSWORD={{ db_password }}"

    - name: Start the Flask application
      ansible.builtin.shell: |
        source {{ venv_path }}/bin/activate && FLASK_APP={{ app_path }} flask run --host=0.0.0.0 &
      args:
        executable: /bin/bash

    - name: Ensure Flask application is running
      ansible.builtin.shell: |
        pgrep -f "flask run"
      register: app_status
      failed_when: app_status.stdout == ""
      retries: 5
      delay: 10